use serde::Deserialize;

#[derive(Debug, Deserialize, PartialEq, Eq, Hash, PartialOrd, Clone)]
pub enum Command{
    QuickBlitz,
    Blitz,
    MeteorCrash,
    MagicHour,
    SlidingDash,
    FireDash,
    DarkHaze,
    SonicBlade,
    ChaosBlade,
    Zantetsuken,
    StrikeRaid,
    FreezeRaid,
    TreasureRaid,
    SparkRaid,
    WindRaid,
    FireSurge,
    BarrierSurge,
    ThunderSurge,
    AerialSlam,
    ArsSolum,
    ArsArcanum,
    TimeSplicer,
    PoisonEdge,
    WishingEdge,
    BlizzardEdge,
    StunEdge,
    SlotEdge,
    FireStrike,
    ConfusionStrike,
    BindingStrike,
    TornadoStrike,
    BrutalBlast,
    MagnetSpiral,
    Salvation,
    Windcutter,
    LimitStorm,
    CollisionMagnet,
    GeoImpact,
    Sacrifice,
    BreakTime,
    Fire,
    Fira,
    Firaga,
    DarkFiraga,
    FissionFiraga,
    TripleFiraga,
    CrawlingFire,
    Blizzard,
    Blizzara,
    Blizzaga,
    TripleBlizzaga,
    Thunder,
    Thundara,
    Thundaga,
    ThundagaShot,
    Cure,
    Cura,
    Curaga,
    Esuna,
    MineShield,
    MineSquare,
    SeekerMine,
    ZeroGravity,
    ZeroGravira,
    ZeroGraviga,
    Magnet,
    Magnera,
    Magnega,
    MunnyMagnet,
    EnergyMagnet,
    DLinkMagnet,
    Aero,
    Aerora,
    Aeroga,
    Warp,
    Faith,
    DeepFreeze,
    Glacier,
    IceBarrage,
    FiragaBurst,
    RagingStorm,
    MegaFlare,
    Quake,
    Meteor,
    Tornado,
    Transcendence,
    Mini,
    Ignite,
    Confuse,
    Bind,
    Poison,
    Slow,
    Stop,
    Stopra,
    Stopga,
    Sleep,
    Blackout,
    Block,
    RenewalBlock,
    FocusBlock,
    StunBlock,
    PoisonBlock,
    Barrier,
    RenewalBarrier,
    FocusBarrier,
    ConfuseBarrier,
    StopBarrier,
    CounterHammer,
    PaybackFang,
    CounterRush,
    ReversalSlash,
    PaybackRaid,
    CounterBlast,
    PaybackSurge,
    AerialRecovery,
    MeteorShower,
    FlameSalvo,
    ChaosSnake,
    DarkVolley,
    BubbleBlaster,
    Ragnarok,
    Thunderstorm,
    BioBarrage,
    PulseBomb,
    PrismRain,
    PhotonCharge,
    AbsoluteZero,
    LightningRay,
    SonicShadow,
    UltimaCannon,
    Multivortex,
    Lightbloom,
    DarkLink,
    Jump,
    HighJump,
    DodgeRoll,
    ThunderRoll,
    Cartwheel,
    Firewheel,
    AirSlide,
    IceSlide,
    SonicImpact,
    Slide,
    Reversal,
    Glide,
    Superglide,
    FireGlide,
    HomingSlide,
    Teleport,
    Doubleflight,
}

#[derive(Debug, Deserialize)]
pub enum RecipeType{
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
}

#[derive(Debug, Deserialize)]
pub enum Character{
    Terra,
    Aqua,
    Ventus,
}

#[derive(Debug, Deserialize)]
pub struct CharacterSpecificResult{
    pub character: Character,
    pub activation_chance: f32,
}

#[derive(Debug, Deserialize)]
pub struct CommandResult{
    pub result: Command,
    pub chances: Vec<CharacterSpecificResult>,
}

#[derive(Debug, Deserialize)]
pub struct Recipe{
    pub command1: Command,
    pub command2: Command,
    pub results: Vec<CommandResult>,
    pub command_type: RecipeType,
}

#[derive(Debug, Deserialize)]
pub struct RecipeCollection{
    pub recipes: Vec<Recipe>
}
